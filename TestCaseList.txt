üìë Manual Test Cases ‚Äì The Internet (Herokuapp)

‚∏ª

1. Homepage

TC ID: NAV_01
Title: Verify homepage loads correctly
Precondition: None
Steps:
	1.	Navigate to https://the-internet.herokuapp.com/.
Expected Result: Homepage loads with title The Internet and list of example links.

TC ID: NAV_02
Title: Verify all links are displayed
Precondition: Homepage is open
Steps:
	1.	Scroll through homepage.
Expected Result: All example links are visible.

TC ID: NAV_03
Title: Verify navigation to example pages
Precondition: Homepage is open
Steps:
	1.	Click each link one by one.
Expected Result: Correct page opens, header matches link name.

‚∏ª

2. Add/Remove Elements

TC ID: ARE_01
Title: Add element
Precondition: User is on Add/Remove Elements page
Steps:
	1.	Click Add Element button.
Expected Result: A Delete button appears.

TC ID: ARE_02
Title: Add multiple elements
Precondition: User is on Add/Remove Elements page
Steps:
	1.	Click Add Element button 3 times.
Expected Result: 3 Delete buttons appear.

TC ID: ARE_03
Title: Remove element
Precondition: At least one Delete button exists
Steps:
	1.	Click Delete button.
Expected Result: That button disappears.

TC ID: ARE_04
Title: Remove all elements
Precondition: Multiple Delete buttons exist
Steps:
	1.	Add 5 elements.
	2.	Remove all using Delete buttons.
Expected Result: No Delete buttons remain.

‚∏ª

3. Checkboxes

TC ID: CBX_01
Title: Verify default state of checkboxes
Precondition: User is on Checkboxes page
Steps:
	1.	Open the Checkboxes page.
Expected Result: Checkbox 1 is unchecked, Checkbox 2 is checked.

TC ID: CBX_02
Title: Select checkbox 1
Precondition: Checkbox 1 is unchecked
Steps:
	1.	Click checkbox 1.
Expected Result: Checkbox 1 becomes checked.

TC ID: CBX_03
Title: Deselect checkbox 2
Precondition: Checkbox 2 is checked
Steps:
	1.	Click checkbox 2.
Expected Result: Checkbox 2 becomes unchecked.

TC ID: CBX_04
Title: Toggle checkboxes multiple times
Precondition: User is on Checkboxes page
Steps:
	1.	Click each checkbox multiple times.
Expected Result: State changes correctly with each click.

4. Form Authentication

TC ID: FA_01
Title: Login with valid credentials
Precondition: User is on Login page
Steps:
	1.	Enter username tomsmith.
	2.	Enter password SuperSecretPassword!.
	3.	Click Login.
Expected Result: User is redirected to Secure Area with a success message.

TC ID: FA_02
Title: Login with invalid username
Precondition: User is on Login page
Steps:
	1.	Enter invalid username.
	2.	Enter valid password.
	3.	Click Login.
Expected Result: Error message Your username is invalid! is displayed.

TC ID: FA_03
Title: Login with invalid password
Precondition: User is on Login page
Steps:
	1.	Enter valid username.
	2.	Enter wrong password.
	3.	Click Login.
Expected Result: Error message Your password is invalid! is displayed.

TC ID: FA_04
Title: Attempt login with blank fields
Precondition: User is on Login page
Steps:
	1.	Leave username blank.
	2.	Leave password blank.
	3.	Click Login.
Expected Result: Validation error message is displayed.

TC ID: FA_05
Title: Logout from secure area
Precondition: User is logged in successfully
Steps:
	1.	Click Logout.
Expected Result: User is redirected to Login page with message You logged out.

TC ID: FA_06
Title: Try accessing secure page after logout
Precondition: User has logged out
Steps:
	1.	Use browser back button or re-enter Secure Area URL.
Expected Result: User is not allowed; redirected to Login page.

‚∏ª

5. Dropdown

TC ID: DD_01
Title: Verify default option
Precondition: User is on Dropdown page
Steps:
	1.	Open dropdown.
Expected Result: Default option text is visible.

TC ID: DD_02
Title: Select Option 1
Precondition: Dropdown page is open
Steps:
	1.	Select ‚ÄúOption 1‚Äù from dropdown.
Expected Result: Option 1 is selected.

TC ID: DD_03
Title: Select Option 2
Precondition: Dropdown page is open
Steps:
	1.	Select ‚ÄúOption 2‚Äù from dropdown.
Expected Result: Option 2 is selected.

‚∏ª

6. JavaScript Alerts

TC ID: JS_01
Title: Handle simple alert
Precondition: User is on JS Alerts page
Steps:
	1.	Click Click for JS Alert.
	2.	Accept alert.
Expected Result: Message You successfully clicked an alert is displayed.

TC ID: JS_02
Title: Handle confirm alert ‚Äì accept
Steps:
	1.	Click Click for JS Confirm.
	2.	Accept alert.
Expected Result: Message You clicked: Ok is displayed.

TC ID: JS_03
Title: Handle confirm alert ‚Äì cancel
Steps:
	1.	Click Click for JS Confirm.
	2.	Cancel alert.
Expected Result: Message You clicked: Cancel is displayed.

TC ID: JS_04
Title: Handle prompt alert ‚Äì enter text
Steps:
	1.	Click Click for JS Prompt.
	2.	Enter text ‚ÄúTest‚Äù.
	3.	Accept alert.
Expected Result: Message You entered: Test is displayed.

TC ID: JS_05
Title: Handle prompt alert ‚Äì cancel
Steps:
	1.	Click Click for JS Prompt.
	2.	Cancel alert.
Expected Result: Message You entered: null is displayed.

‚∏ª

7. Dynamic Controls

TC ID: DC_01
Title: Remove checkbox
Precondition: Checkbox is present
Steps:
	1.	Click Remove.
Expected Result: Checkbox disappears and message It‚Äôs gone! is shown.

TC ID: DC_02
Title: Add checkbox
Precondition: Checkbox has been removed
Steps:
	1.	Click Add.
Expected Result: Checkbox reappears and message It‚Äôs back! is shown.

TC ID: DC_03
Title: Enable input field
Precondition: Input field is disabled
Steps:
	1.	Click Enable.
Expected Result: Input becomes editable and message It‚Äôs enabled! is shown.

TC ID: DC_04
Title: Disable input field
Precondition: Input field is enabled
Steps:
	1.	Click Disable.
Expected Result: Input becomes disabled and message It‚Äôs disabled! is shown.

TC ID: DC_05
Title: Enter text in enabled input
Precondition: Input field is enabled
Steps:
	1.	Type text in input field.
Expected Result: Text appears in the field.

‚∏ª

8. File Upload & Download

TC ID: FU_01
Title: Upload valid file
Precondition: User has a valid file
Steps:
	1.	Click Choose File.
	2.	Select a .txt file.
	3.	Click Upload.
Expected Result: File name is displayed and upload is successful.

TC ID: FU_02
Title: Upload without selecting file
Steps:
	1.	Click Upload without choosing a file.
Expected Result: Error message or no action taken.

TC ID: FD_01
Title: Download a file
Precondition: User is on File Download page
Steps:
	1.	Click on a file link.
Expected Result: File is downloaded successfully.

‚∏ª

9. Broken Images

TC ID: BI_01
Title: Verify images
Precondition: User is on Broken Images page
Steps:
	1.	Open page and check images.
Expected Result: Some images load, some are broken.

TC ID: BI_02
Title: Validate alt text for broken images
Steps:
	1.	Hover or inspect broken images.
Expected Result: Alt text or placeholder is displayed.

‚∏ª

10. Drag and Drop

TC ID: DND_01
Title: Drag A to B
Precondition: User is on Drag and Drop page
Steps:
	1.	Drag element A.
	2.	Drop it on element B.
Expected Result: Elements swap positions.

TC ID: DND_02
Title: Drag B to A
Steps:
	1.	Drag element B.
	2.	Drop it on element A.
Expected Result: Elements swap positions.

‚∏ª

11. Context Menu

TC ID: CM_01
Title: Right-click on box
Precondition: User is on Context Menu page
Steps:
	1.	Right-click inside the box.
Expected Result: JavaScript alert appears.

TC ID: CM_02
Title: Handle alert
Steps:
	1.	Accept the alert.
Expected Result: Alert closes successfully.

‚∏ª

12. Dynamic Loading

TC ID: DL_01
Title: Example 1 ‚Äì Hidden element
Precondition: User is on Dynamic Loading Example 1
Steps:
	1.	Click Start.
	2.	Wait for loading to finish.
Expected Result: Message Hello World! is displayed.

TC ID: DL_02
Title: Example 2 ‚Äì Rendered element
Precondition: User is on Dynamic Loading Example 2
Steps:
	1.	Click Start.
	2.	Wait for loading to finish.
Expected Result: Message Hello World! is displayed.

‚∏ª

13. Frames & Windows

TC ID: FR_01
Title: Switch between nested frames
Precondition: User is on Frames page
Steps:
	1.	Switch into parent frame.
	2.	Switch into child frame.
Expected Result: Frame text is displayed correctly.

TC ID: FR_02
Title: Open new window
Precondition: User is on Multiple Windows page
Steps:
	1.	Click Click Here link.
	2.	Switch to new window.
Expected Result: New window opens with text New Window.

‚∏ª

14. Notifications

TC ID: NT_01
Title: Verify notification message
Precondition: User is on Notification page
Steps:
	1.	Click notification link.
Expected Result: Either success or error message is displayed randomly.

‚∏ª
ü§ñ Automation Test Cases ‚Äì The Internet (Herokuapp)

‚∏ª

1. Herokuapp.Navigation
	‚Ä¢	ATC_01: Verify homepage loads with correct title.
	‚Ä¢	ATC_02: Verify all example links are present.
	‚Ä¢	ATC_03: Verify each link navigates to the correct page and URL.

‚∏ª

2. Add/Remove Elements
	‚Ä¢	ATC_04: Automate adding a single element and validate ‚ÄúDelete‚Äù button appears.
	‚Ä¢	ATC_05: Automate adding multiple elements (e.g., 5) and validate count.
	‚Ä¢	ATC_06: Automate deleting one element and validate it disappears.
	‚Ä¢	ATC_07: Automate deleting all elements and validate none remain.

‚∏ª

3. Checkboxes
	‚Ä¢	ATC_08: Validate default state of both checkboxes.
	‚Ä¢	ATC_09: Automate selecting checkbox 1 and validating state.
	‚Ä¢	ATC_10: Automate unselecting checkbox 2 and validating state.
	‚Ä¢	ATC_11: Automate toggling checkboxes multiple times and validate correct toggle behavior.

‚∏ª

4. Form Authentication
	‚Ä¢	ATC_12: Automate login with valid credentials ‚Üí verify secure area page and success message.
	‚Ä¢	ATC_13: Automate login with invalid username ‚Üí verify error message.
	‚Ä¢	ATC_14: Automate login with invalid password ‚Üí verify error message.
	‚Ä¢	ATC_15: Automate login with blank username/password ‚Üí verify validation error.
	‚Ä¢	ATC_16: Automate logout ‚Üí verify redirect to login page and logout message.
	‚Ä¢	ATC_17: Validate user cannot access secure page after logout (session validation).

‚∏ª

5. Dropdown
	‚Ä¢	ATC_18: Automate selecting ‚ÄúOption 1‚Äù ‚Üí validate selection.
	‚Ä¢	ATC_19: Automate selecting ‚ÄúOption 2‚Äù ‚Üí validate selection.
	‚Ä¢	ATC_20: Validate dropdown default text.

‚∏ª

6. JavaScript Alerts
	‚Ä¢	ATC_21: Automate JS Alert ‚Üí accept ‚Üí validate message.
	‚Ä¢	ATC_22: Automate JS Confirm ‚Üí accept ‚Üí validate message.
	‚Ä¢	ATC_23: Automate JS Confirm ‚Üí dismiss ‚Üí validate message.
	‚Ä¢	ATC_24: Automate JS Prompt ‚Üí enter text and accept ‚Üí validate entered text.
	‚Ä¢	ATC_25: Automate JS Prompt ‚Üí dismiss ‚Üí validate null result.

‚∏ª

7. Dynamic Controls
	‚Ä¢	ATC_26: Automate removing checkbox ‚Üí validate disappearance + success message.
	‚Ä¢	ATC_27: Automate adding checkbox ‚Üí validate reappearance + success message.
	‚Ä¢	ATC_28: Automate enabling input ‚Üí validate input becomes editable.
	‚Ä¢	ATC_29: Automate disabling input ‚Üí validate input becomes non-editable.
	‚Ä¢	ATC_30: Automate entering text into input when enabled and validate.

‚∏ª

8. File Upload & Download
	‚Ä¢	ATC_31: Automate uploading a file ‚Üí validate file name displayed.
	‚Ä¢	ATC_32: Automate uploading with no file ‚Üí validate error/no action.
	‚Ä¢	ATC_33: Automate downloading a file ‚Üí validate file exists in download folder.

‚∏ª

9. Broken Images
	‚Ä¢	ATC_34: Automate detection of broken images using image properties (e.g., naturalWidth = 0).
	‚Ä¢	ATC_35: Automate validation of alt text for broken images.

‚∏ª

10. Drag and Drop
	‚Ä¢	ATC_36: Automate drag element A to element B ‚Üí validate swap.
	‚Ä¢	ATC_37: Automate drag element B to element A ‚Üí validate swap.

‚∏ª

11. Context Menu
	‚Ä¢	ATC_38: Automate right-click on context menu box ‚Üí validate alert appears.
	‚Ä¢	ATC_39: Automate handling of alert ‚Üí accept ‚Üí validate alert disappears.

‚∏ª

12. Dynamic Loading
	‚Ä¢	ATC_40: Automate Example 1 (hidden element) ‚Üí click Start ‚Üí wait ‚Üí validate ‚ÄúHello World!‚Äù.
	‚Ä¢	ATC_41: Automate Example 2 (rendered element) ‚Üí click Start ‚Üí wait ‚Üí validate ‚ÄúHello World!‚Äù.

‚∏ª

13. Frames & Windows
	‚Ä¢	ATC_42: Automate switching between nested frames ‚Üí validate frame text.
	‚Ä¢	ATC_43: Automate opening new window ‚Üí validate new tab title/content.

‚∏ª

14. Notifications
	‚Ä¢	ATC_44: Automate clicking Notification link ‚Üí validate success/error messages displayed (randomized).

‚∏ª
